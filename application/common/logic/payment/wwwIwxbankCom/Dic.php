<?php

namespace application\common\logic\payment\wwwIwxbankCom;

/**
 * @uses 支付相关字典
 * @author jhl
 */
class Dic extends Base
{
    //微信扫码编号
    const WECHAT_CODE = '014';
    
    //支付宝扫码编号
    const ALIPAY_CODE = '027';
    
    //快捷支付扫码编号
    const QUICKPAY_CODE = '016';
    
    
    /**
     * @uses 支付类型
     * @author jhl
     * @param int $payType(1：微信；2：支付宝；3：QQ；4：京东钱包；5：银联钱包；6：银行快捷（汇耘富无卡支付）)
     */
    public function payType($payType, $fieldName = '')
    {
        $type = self::payTypeList();
        if (!isset($type[$payType])) {
            return [];
        }
        if ($fieldName) {
            return $type[$payType][$fieldName];
        }
        return $type[$payType];
    }
    
    /**
     * @uses 已开通的支付方式--支付渠道类型多样化，需跟接口商对接，暂时不能全部例举
     * @author jhl
     */
    public function payTypeList()
    {
        $type = [
//            1 => [
//                'name' => '微信扫码',
//                'typeValue' => 1,
//                'code' => self::WECHAT_CODE,
//                'status' => 1,
//                'payKind' => 'payKind=APPWX'//强制微信扫码支付
//            ],
//            2 => [
//                'name' => '支付宝扫码',
//                'typeValue' => 2,//注意：typeId和数组key保持一直
//                'code' => self::ALIPAY_CODE,
//                'status' => 1,//是否开启（0：未开启；1：开启）
//                'payKind' => 'payKind=APPZFB',//强制支付宝扫码支付
//            ],
//             3 => [
//                 'name' => 'qq扫码',
//                 'typeValue' => 3,
//                 'code' => '',
//                 'status' => 0
//             ],
//             4 => [
//                 'name' => '京东钱包',
//                 'typeValue' => 4,
//                 'code' => '',
//                 'status' => 0
//             ],
//             5 => [
//                 'name' => '银联钱包',
//                 'typeValue' => 5,
//                 'code' => '',
//                 'status' => 0
//             ],
            6 => [
                'name' => '快捷支付',
                'typeValue' => 6,
                'code' => self::QUICKPAY_CODE,
                'status' => 1,
                'payKind' => '',//微信支付宝都支持
            ],
        ];
        return $type;
    }
    
    /**
     * @uses 交易响应码
     * @author jhl
     */
    public function payReturnCode($returnCode = '')
    {
        if (!$returnCode) {
            return '';
        }
        $code = [
            '00' => '成功',
            '01' => '交易异常，支付失败',
            '02' => '无效卡号',
            '03' => '发卡银行不支持',
            '04' => '未付款',//可发查询确认交易状态
            '05' => '系统异常（如存在渠道返回信息，会透传错误描述）',//可发查询确认交易状态
            '06' => '过期卡',
            '07' => '无效商户号',
            '08' => '商户号不能为空',
            '09' => '商户订单号不能为空',
            '10' => '交易金额不能为空',
            '11' => '余额不足',
            '12' => '卡号不能为空',
            '13' => 'CVN2不能为空',
            '14' => '过期卡或卡有效期有误',
            '15' => '密码错',
            '16' => '信用卡有效期不能为空',
            '17' => '商户状态异常',
            '18' => '商户密钥信息不存在',
            '19' => '商户密钥已失效',
            '20' => '转入卡卡号有误',
            '21' => '单笔交易金额超过单笔金额上限',
            '22' => '机构状态异常',
            '23' => '机构号不能为空',
            '24' => '不支持的卡类型',
            '25' => '不支持借记卡交易',
            '26' => '不支持贷记卡交易',
            '27' => '订单号重复',
            '28' => '未知交易类型',
            '29' => '原交易状态异常',
            '30' => '报文格式错误',
            '31' => '交易被禁止',
            '32' => '交易金额非法',
            '33' => '原交易已撤销',
            '34' => '非当天交易不支持撤销',
            '35' => '原交易已发起撤销或退货',
            '36' => '金额超限',
            '37' => '原交易不支持撤销',
            '38' => '交易金额与原交易不符',
            '39' => '密码错误次数超限',
            '40' => '该时间段不允许交易',
            '41' => '联行号不存在',
            '42' => '订单日期无效',
            '43' => '单笔交易金额低于单笔金额下限',
            '44' => '机构与原交易发起机构不一致',
            '45' => '因系统繁忙而延迟',
            '46' => '没收卡',
            '47' => '不予承兑',
            '48' => '已挂失卡',
            '49' => '被窃卡',
            '50' => '无此账户',
            '51' => '过期卡',
            '52' => '原始金额不正确',
            '53' => '日期切换正在处理',
            '54' => 'PIN格式出错',
            '55' => '原始交易不成功',
            '56' => '交易受限',
            '57' => '系统忙，请稍后再提交',
            '58' => '交易已被冲正',
            '59' => '账号户名不符',
            '60' => '交易金额超过单笔限额',
            '61' => '日限额',
            '62' => '无此原交易',//建议与上游确认交易结果--等待支付中的订单
            '63' => '找不到原记录',
            '64' => '货币错误',
            '65' => '未与银行签约',
            '66' => '二维码已失效',
            '67' => '支付次数超限',
            '68' => '无此二维码',
            '69' => '基于风险控制原因失败',
            '70' => '持卡人身份验证失败',
            '71' => '交易无效',
            '72' => '输入超时，交易失败',
            '73' => '银行卡未开通认证支付',
            '74' => '交易失败，营销规则不满足',
            '75' => '持卡人预留手机号不符',
            '76' => '月限额',
            '77' => '无此交易权限',
            '78' => '已超过最大查询次数或操作过于频繁',
            '79' => '卡状态异常',
            '80' => '内部错误',
            '81' => '可疑报文',
            '82' => '验签失败',
            '83' => '后端系统超时',
            '84' => '订单不存在',
            '85' => '未配置交易策略',
            '86' => '无此交易',
            '87' => '与原交易信息不符',
            '88' => '无效的关联交易',
            '89' => '无此发卡方',
            '90' => '商户未开通支付权限',
            '91' => '商户签名密钥异常',
            '92' => '请求参数非法',
            '94' => '重复交易',
            '99' => '待响应，请发查询',//必须发查询确认交易状态
            'A1' => '字段[version]上送异常，请检查',
            'A2' => '字段[organNo]上送异常，请检查',
            'A3' => '字段[hicardMerchNo]上送异常，请检查',
            'A4' => '字段[payType]上送异常，请检查',
            'A5' => '字段[merchOrderNo]上送异常，请检查',
            'A6' => '字段[amount]上送异常，请检查',
            'A7' => '字段[backEndUrl]上送异常，请检查',
            'A8' => '字段[sign]上送异常，请检查',
            'A9' => '字段[goodsName]上送异常，请检查',
            'AA' => '字段[authCode]上送异常，请检查',
            'AB' => '字段[refundMerchOrderNo]上送异常，请检查',
            'AC' => '字段[refundMoney]上送异常，请检查',
            'AD' => '字段[remark]上送异常，请检查'          
        ];
        return isset($code[$returnCode]) ? $code[$returnCode] : '';
    }
    
    /**
     * @uses 需重新发起查询列表
     * @author jhl
     */
    public function repeatSelectTrueStatusList()
    {
        //04不需要
        return [
            '04',
            '05',
            '99',
            '62'
        ];
    }
    
    /**
     * @uses 等待支付状态编号列表
     * @author jhl
     */
    public function waitPayResultCodeList()
    {
        return [
            '62',
            '90'
        ];
    }
    
    
    
    
}